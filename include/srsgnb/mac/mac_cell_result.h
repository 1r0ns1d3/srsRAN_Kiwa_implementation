
#ifndef SRSGNB_MAC_MAC_CELL_RESULT_H
#define SRSGNB_MAC_MAC_CELL_RESULT_H

#include "srsgnb/adt/byte_buffer.h"
#include "srsgnb/adt/static_vector.h"
#include "srsgnb/ran/pdcch/dci_packing.h"
#include "srsgnb/ran/slot_point.h"
#include "srsgnb/ran/ssb_properties.h"
#include "srsgnb/rlc/rlc_byte_buffer.h" // TODO: Remove coupling.
#include "srsgnb/scheduler/scheduler_slot_handler.h"

namespace srsgnb {

constexpr size_t MAX_DL_PDUS_PER_SLOT = 16;

struct ssb_mib_data_pdu {
  dmrs_typeA_position dmrs_typeA_pos;
  uint8_t             pdcch_config_sib1;
  bool                cell_barred;
  bool                intra_freq_reselection;
};

struct dl_ssb_pdu {
  pci_t        pci;
  ssb_beta_pss beta_pss_profile_nr;
  uint8_t      ssb_index;
  uint8_t      ssb_subcarrier_offset;
  uint16_t     offset_to_point_A;

  ssb_pattern_case ssb_case;
  uint8_t          L_max;
  /// SSB SCS.
  subcarrier_spacing scs;

  /// Data for MIB generation
  ssb_mib_data_pdu mib_data;
};

/// DL Scheduling Request generated by the MAC and received by the PHY.
/// \remark This struct will be used in FAPI to generate DL_TTI.Request.
struct mac_dl_sched_result {
  slot_point                                       slot;
  const dl_sched_result*                           dl_res;
  static_vector<dl_ssb_pdu, MAX_SSB_PER_SLOT>      ssb_pdu;
  static_vector<dci_payload, MAX_DL_PDUS_PER_SLOT> pdcch_pdus;
};

/// List of DL PDUs produced by MAC in a given slot and cell.
struct mac_dl_data_result {
  slot_point                                           slot;
  static_vector<byte_buffer, MAX_SIB1_PDUS_PER_SLOT>   sib1_pdus;
  static_vector<byte_buffer, MAX_RAR_PDUS_PER_SLOT>    rar_pdus;
  static_vector<rlc_byte_buffer, MAX_DL_PDUS_PER_SLOT> ue_pdus;
};

struct mac_ul_sched_result {
  const ul_sched_result* ul_res;
};

class mac_cell_result_notifier
{
public:
  virtual ~mac_cell_result_notifier() = default;

  /// Notifies scheduled SSB/PDCCH/PDSCH grants.
  virtual void on_new_downlink_scheduler_results(const mac_dl_sched_result& dl_res) = 0;

  /// Notifies scheduled PDSCH PDUs.
  virtual void on_new_downlink_data(const mac_dl_data_result& dl_data) = 0;

  /// Notifies slot scheduled PUCCH/PUSCH grants.
  virtual void on_new_uplink_scheduler_results(const mac_ul_sched_result& ul_res) = 0;
};

class mac_result_notifier
{
public:
  virtual ~mac_result_notifier() = default;

  virtual mac_cell_result_notifier& get_cell(du_cell_index_t cell_index) = 0;
};

} // namespace srsgnb

#endif // SRSGNB_MAC_MAC_CELL_RESULT_H
