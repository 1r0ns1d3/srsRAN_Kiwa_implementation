include:
  # General
  - project: softwareradiosystems/testing-tools
    ref: "12"
    file: .gitlab/ci-shared/default.yml
  - project: softwareradiosystems/testing-tools
    ref: "12"
    file: .gitlab/ci-shared/workflow.yml
  - project: softwareradiosystems/testing-tools
    ref: "12"
    file: .gitlab/ci-shared/versions.yml
  # Add features to the ci stage
  - project: softwareradiosystems/testing-tools
    ref: "12"
    file: .gitlab/ci-shared/autorebaser.yml
  - project: softwareradiosystems/testing-tools
    ref: "12"
    file: .gitlab/ci-shared/ci_checks.yml
  - project: softwareradiosystems/testing-tools
    ref: "12"
    file: .gitlab/ci-shared/notify_status.yml
  - project: softwareradiosystems/testing-tools
    ref: "12"
    file: .gitlab/ci-shared/scheduler.yml
  # Local
  - local: .gitlab/ci/build.yml

stages:
  - ci
  - static
  - build
  - tests
  - documentation

################################################################################
## Static
################################################################################
.static:
  image: registry.gitlab.com/softwareradiosystems/testing-tools/static_validator:$DOCKER_STATIC_VERSION
  stage: static
  rules:
    - if: $ON_MR
  variables:
    GIT_DEPTH: 0

code-format:
  extends: .static
  script:
    - run-clang-format-diff.sh $CI_MERGE_REQUEST_DIFF_BASE_SHA
    - hex2lowercase.sh
    - is-pristine-repo.sh
  artifacts:
    paths:
      - clang-format.patch
    when: on_failure

include-guards:
  extends: .static
  script:
    - |
      EXIT_CODE=0
      AUTOCORRECTION=1 PRAGMA=1 TARGET_BRANCH=origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME INPUT_PATH="include/srsgnb" INPUT_IGNORE="/bundled/" include-guards-check.sh || EXIT_CODE=$?
      AUTOCORRECTION=1 PRAGMA=1 TARGET_BRANCH=origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME INPUT_PATH="." INPUT_IGNORE="^\(include\|docs\)/.*" include-guards-check.sh || EXIT_CODE=$?
      is-pristine-repo.sh || EXIT_CODE=$?
      exit $EXIT_CODE

no-binaries-added:
  extends: .static
  script:
    - check-for-added-binaries.sh $CI_MERGE_REQUEST_DIFF_BASE_SHA
  allow_failure: true

################################################################################
## Build + Unit Tests + Integration tests
################################################################################
.alternative builds:
  stage: build
  needs: []
  variables:
    check_flags: "false"
    run_tests: "true"
    enable_coverage: "false"
    coverage_full_report: "false"
  trigger:
    include: .gitlab/ci/build.yml
    strategy: depend

alternative builds:
  extends: .alternative builds
  rules:
    - if: $ON_MR
      variables:
        run_tests: "false"
    - if: $ON_SCHEDULE
  parallel:
    matrix:
      - os_type: ubuntu
        os_version: "22.04"
        compiler: clang
        uhd_version: "4.1.0.5"
      - os_type: ubuntu
        os_version: "20.04"
        uhd_version: "3.15.0.0"
        compiler: [gcc, clang]
      - os_type: archlinux
        os_version: latest
        uhd_version: "4.2.0.0"
        compiler: [gcc, clang]

alternative builds uhd:
  extends: .alternative builds
  rules:
    - if: $ON_SCHEDULE
      variables:
        CI_MERGE_REQUEST_LABELS: no-cache
  parallel:
    matrix:
      - os_type: ubuntu
        os_version: "22.04"
        compiler: [gcc, clang]
        uhd_version: "4.2.0.0"
      - os_type: ubuntu
        os_version: "20.04"
        compiler: [gcc, clang]
        uhd_version: ["4.2.0.0", "4.1.0.5"]

################################################################################
# Doc generation
################################################################################
unit requirements:
  stage: documentation
  rules:
    - if: $ON_SCHEDULE
      when: always # Even if previous stages/required jobs fail
  image: registry.gitlab.com/softwareradiosystems/testing-tools/srs-tools:$SRS_TOOLS_VERSION
  script:
    - test-reporter --input unittests --output ./requirement_report.html
  dependencies: []
  artifacts:
    paths:
      - requirement_report.html
    expire_in: 10 minutes

unit tests web:
  stage: documentation
  rules:
    - if: $ON_SCHEDULE
      when: always # Even if previous stages/required jobs fail
  image: python:3.9-alpine # sh entrypoint
  variables:
    GIT_STRATEGY: none
  before_script:
    - pip install junit2html
  script:
    - junit2html *xunit.xml --merge merged_xunit.xml
    - junit2html merged_xunit.xml ./test_report.html
  needs:
    - job: unit tests
      artifacts: true
  artifacts:
    paths:
      - test_report.html
    expire_in: 10 minutes

pages:
  stage: documentation
  rules:
    - if: $ON_SCHEDULE
      when: always # Even if previous stages/required jobs fail
  image: registry.gitlab.com/softwareradiosystems/testing-tools/doxygen:$DOCKER_DOXYGEN_VERSION
  script:
    - doxygen_generator.sh
    - mv build/public .
    - mv coverage_html public/
    - mv test_report.html public/
    - mv requirement_report.html public/
    - mv public/index.html public/index_doxygen.html
    - mv docs/index.html public/index.html
  after_script:
    - |
      if [ $CI_JOB_STATUS = "failed" ]; then
        mkdir -p public
        mv docs/fail.html public/index.html
      fi
    - mv docs/*.png public/
    - sed -i 's/commit_hash/'$CI_COMMIT_SHA'/' public/index.html
  needs:
    - job: unit coverage
      artifacts: true
    - job: unit requirements
      artifacts: true
    - job: unit tests web
      artifacts: true
  artifacts:
    paths:
      - public
    expire_in: 10 minutes
