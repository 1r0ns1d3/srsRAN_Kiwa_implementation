include:
  - project: softwareradiosystems/testing-tools
    ref: "1.0.0"
    file: .gitlab/ci-shared/workflow.yml
  - project: softwareradiosystems/testing-tools
    ref: "1.0.0"
    file: .gitlab/ci-shared/scheduler.yml
  - local: .gitlab/ci/build.yml

variables:
  STATIC_DOCKER: "registry.gitlab.com/softwareradiosystems/testing-tools/static_validator:1.0.3"

stages:
  - static
  - build
  - unit tests
  - scheduler
  - build and publish doc
  - notify status

## Static

code-format:
  stage: static
  rules:
    - if: $ON_MR
  variables:
    GIT_DEPTH: 0
  image: $STATIC_DOCKER
  before_script:
    - git remote set-branches --add origin $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - git fetch
  script:
    - run-clang-format-diff.sh origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - hex2lowercase.sh
    - is-pristine-repo.sh

no-binaries-added:
  stage: static
  rules:
    - if: $ON_MR
  variables:
    GIT_DEPTH: 0
  image: $STATIC_DOCKER
  before_script:
    - git remote set-branches --add origin $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - git fetch
  script:
    - check-for-added-binaries.sh origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME
  allow_failure: true

## Build + Unit Tests

alternative builds:
  stage: build
  rules:
    - if: $ON_MR
      variables:
        run_unit_tests: "false"
        enable_coverage: "false"
    - if: $ON_SCHEDULE
      variables:
        run_unit_tests: "true"
        enable_coverage: "false"
  needs: []
  trigger:
    include: .gitlab/ci/build.yml
    strategy: depend
  parallel:
    matrix:
      - os_type: ubuntu
        os_version: "22.04"
        compiler: clang
      - os_type: ubuntu
        os_version: "20.04"
        compiler: [gcc, clang]
      - os_type: archlinux
        os_version: latest
        compiler: [gcc, clang]

## Scheduler

.gnb-scheduler:
  stage: scheduler
  variables:
    SCHEDULER_VERSION: "1.3.0"

scheduler-planer:
  extends:
    - .scheduler-planer
    - .gnb-scheduler
  rules:
    - if: $ON_MR
      changes:
        - .gitlab/ci/schedules.yml

scheduler:
  extends:
    - .scheduler
    - .gnb-scheduler
  rules:
    - if: $ON_DEFAULT_BRANCH

# Doc generation

pages:
  stage: build and publish doc
  rules:
    - if: $ON_DEFAULT_BRANCH
  variables:
    docker_version: "1.0.0"
  image: registry.gitlab.com/softwareradiosystems/testing-tools/doxygen:$docker_version
  script:
    - doxygen_generator.sh
    - mv build/public .
  artifacts:
    paths:
      - public

# Slack notification

.notifier:
  stage: notify status
  extends: .srs_tools_setup_job
  variables:
    slack_notifier_version: "1.3.0"
  before_script:
    - !reference [.srs_tools_setup_job, before_script]
    - srs_tools_setup $slack_notifier_version
    - MSG="Pipeline <${CI_PIPELINE_URL}|#${CI_PIPELINE_IID}> for commit <${CI_PROJECT_URL}/-/commit/${CI_COMMIT_SHA}|${CI_COMMIT_SHORT_SHA}> ${CI_COMMIT_BRANCH}${CI_COMMIT_TAG}."

success ci:
  extends: .notifier
  rules:
    - if: $ON_SCHEDULE
  script:
    - notifier --title "$CI_PROJECT_NAME CI success" --msg "${MSG}" --level ok --channel "#ci_gnb" --token "${SLACK_TOKEN}"

failed ci:
  extends: .notifier
  rules:
    - if: $ON_SCHEDULE
      when: on_failure
    - if: $ON_DEFAULT_BRANCH
      when: on_failure
  script:
    - notifier --title "$CI_PROJECT_NAME CI failed" --msg "${MSG}" --level fail --channel "#ci_gnb" --token "${SLACK_TOKEN}"
