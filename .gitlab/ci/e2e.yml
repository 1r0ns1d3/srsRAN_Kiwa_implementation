#
# Copyright 2013-2023 Software Radio Systems Limited
#
# By using this file, you agree to the terms and conditions set
# forth in the LICENSE file which can be found at the top level of
# the distribution.
#
include:
  - project: softwareradiosystems/ci/tools
    ref: "2"
    file: .gitlab/ci-shared/setup/all.yml

.prepare_test:
  before_script:
    - |
      export FORCE_COLOR=1
      export KUBECONFIG=$KUBE_CONFIG
      kubectl config set current-context kubernetes-admin@srs-k8s-lab

.e2e-run:
  stage: e2e
  resource_group: e2e
  timeout: 6h
  interruptible: false
  image:
    name: registry.gitlab.com/softwareradiosystems/ci/retina/launcher:0.1.5
    entrypoint: ["/bin/sh", "-c"]
  variables:
    REQUEST: "" # Retina YAML request
    MARKERS: ""
    PYTEST_ARGS: ""
    RETINA_ARGS: ""
    LOG_LEVEL: "info"
  tags:
    - on-prem-amd64
  extends:
    - .prepare_test
  rules:
    - if: $CI_DESCRIPTION =~ /Nightly/
  artifacts:
    paths:
      - $CI_JOB_NAME/*
    when: always
    expire_in: 1 week
    reports:
      junit: tests/e2e/out.xml
  script:
    - |
      cd tests/e2e
      export LOGNAME=ci_$GITLAB_USER_LOGIN
    - retina-launcher --retina-request=${REQUEST} --log-folder=./log --html=./log/report.html --self-contained-html --junitxml=out.xml "${PYTEST_ARGS}" -m "${MARKERS}" --register-parameter ue.all.log_level=$LOG_LEVEL gnb.all.log_level=$LOG_LEVEL "${RETINA_ARGS}"
  after_script:
    - |
      echo "*******************************************************************************************************************************"
      echo "Test report ---> https://softwareradiosystems.gitlab.io/-/$CI_PROJECT_NAME/-/jobs/$CI_JOB_ID/artifacts/$CI_JOB_NAME/report.html"
      echo "*******************************************************************************************************************************"
    - du -hs tests/e2e/log/
    - mv tests/e2e/log ${CI_PROJECT_DIR}/$CI_JOB_NAME
    - echo "$CI_JOB_ID" >> ${CI_PROJECT_DIR}/$CI_JOB_NAME/job.env

smoke-zmq-tsan:
  extends: .e2e-run
  rules:
    - if: $ON_MR == "true" && $CI_MERGE_REQUEST_APPROVED == "true"
    - if: $ON_MR
      when: manual
      allow_failure: false
  variables:
    REQUEST: "${CI_PROJECT_DIR}/.gitlab/ci/retina_request_zmq.yml"
    MARKERS: "smoke and not tcp"
    PYTEST_ARGS: "-x"
    RETINA_ARGS: "gnb.all.pcap=True"
    LOG_LEVEL: "debug"
  needs:
    - job: "avx2 [tsan, cached]"
      artifacts: true
      optional: true
    - job: "avx2 [tsan, update cache]"
      artifacts: true
      optional: true
    - job: "avx2 [tsan, clean]"
      artifacts: true
      optional: true

zmq:
  extends: .e2e-run
  rules:
    - if: $CI_DESCRIPTION =~ /Nightly/
  variables:
    REQUEST: "${CI_PROJECT_DIR}/.gitlab/ci/retina_request_zmq.yml"
    MARKERS: "zmq and not smoke"
    LOG_LEVEL: "info"
  needs:
    - job: "avx2 [basic]"
      artifacts: true

zmq-tsan:
  extends: zmq
  needs:
    - job: "avx2 [tsan, cached]"
      artifacts: true
      optional: true
    - job: "avx2 [tsan, update cache]"
      artifacts: true
      optional: true
    - job: "avx2 [tsan, clean]"
      artifacts: true
      optional: true

zmq-asan:
  extends: zmq
  needs:
    - job: "avx2 [asan]"
      artifacts: true

zmq-valgrind:
  extends: zmq
  variables:
    MARKERS: "zmq_valgrind"
    LOG_LEVEL: "warning"
  allow_failure: true

rf:
  extends: .e2e-run
  rules:
    - if: $ON_MR
      when: manual
      allow_failure: true
    - if: $CI_DESCRIPTION =~ /Nightly/
  variables:
    REQUEST: "${CI_PROJECT_DIR}/.gitlab/ci/retina_request_rf.yml"
    MARKERS: "rf"
    LOG_LEVEL: "warning"
    RETINA_ARGS: gnb.all.pcap=False
  needs:
    - job: "avx2 [basic]"
      artifacts: true

rf-tsan:
  extends: rf
  rules:
    - if: $CI_DESCRIPTION =~ /Nightly/
  variables:
    MARKERS: "rf_not_crash"
  needs:
    - job: "avx2 [tsan, cached]"
      artifacts: true
      optional: true
    - job: "avx2 [tsan, update cache]"
      artifacts: true
      optional: true
    - job: "avx2 [tsan, clean]"
      artifacts: true
      optional: true
  allow_failure: true

rf-asan:
  extends: rf
  rules:
    - if: $CI_DESCRIPTION =~ /Nightly/
  variables:
    MARKERS: "rf_not_crash"
  needs:
    - job: "avx2 [asan]"
      artifacts: true

rf-b200-config:
  extends: rf
  rules:
    - if: $CI_DESCRIPTION =~ /Nightly/
  variables:
    MARKERS: "rf_b200"
