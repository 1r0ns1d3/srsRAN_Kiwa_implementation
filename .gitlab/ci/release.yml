#
# Copyright 2013-2023 Software Radio Systems Limited
#
# By using this file, you agree to the terms and conditions set
# forth in the LICENSE file which can be found at the top level of
# the distribution.
#

include:
  - project: softwareradiosystems/ci/tools
    ref: "6"
    file: .gitlab/ci-shared/setup/all.yml

stages:
  - private
  - public

update agpl main:
  stage: private
  rules:
    - if: $ON_TAG
      allow_failure: true
  interruptible: false
  variables:
    GIT_STRATEGY: none
    BRANCH: agpl_main
  image: ubuntu:22.04
  before_script:
    - DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends git git-lfs apt-transport-https ca-certificates
    - git config --global user.name "${CODEBOT_USERNAME}"
    - git config --global user.email "${CODEBOT_LONG_USERNAME}@noreply.gitlab.com"
  script:
    - git clone https://${CODEBOT_USERNAME}:${CODEBOT_TOKEN}@gitlab.com/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}.git /${CI_PROJECT_NAME}
    - cd /${CI_PROJECT_NAME}
    - git fetch -q origin ${CI_COMMIT_SHA} && git checkout ${CI_COMMIT_SHA}
    - .gitlab/ci/auto_merge.sh ${CI_COMMIT_SHA} ${BRANCH}

generate testvector tar gz:
  stage: private
  rules:
    - if: $ON_TAG
  interruptible: false
  image: ubuntu:22.04
  script:
    - find . -name "*.tar.gz" -exec tar -rvf phy_testvectors.tar.gz {} \;
  artifacts:
    paths:
      - phy_testvectors.tar.gz
    expire_in: "7 days"

release:
  stage: public
  rules:
    - if: $ON_TAG
      when: manual
      allow_failure: false
  interruptible: false
  image: alpine:3.16.0 # sh entrypoint
  variables:
    GIT_STRATEGY: none
    PRIVATE_BRANCH: agpl_main
    PUBLIC_NAME: srsRAN Project
    PUBLIC_REPO: srsran/srsRAN_Project
    PUBLIC_BRANCH: main
  before_script:
    - apk add git
  script:
    # Download private repo and add public as origin
    - git clone --branch $PRIVATE_BRANCH https://${CODEBOT_USERNAME}:${CODEBOT_TOKEN}@gitlab.com/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}.git /${CI_PROJECT_NAME}
    - cd /${CI_PROJECT_NAME}
    - git remote add github_public https://${PUBLIC_TOKEN}@github.com/${PUBLIC_REPO}.git
    # Push code to github main
    - git push github_public ${PRIVATE_BRANCH}:${PUBLIC_BRANCH}
