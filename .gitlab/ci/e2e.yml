.prepare_test:
  before_script:
    - |
      export FORCE_COLOR=1
      export KUBECONFIG=$KUBE_CONFIG
      kubectl config set current-context kubernetes-admin@srs-k8s-lab

.e2e-run:
  stage: test-e2e
  image:
    name: registry.gitlab.com/softwareradiosystems/retina/launcher/3.11-alpine:0.0.9
    entrypoint: ["/bin/sh", "-c"]
  variables:
    REQUEST: "" # Retina YAML request
  tags:
    - on-prem-amd64
  extends:
    - .prepare_test
  rules:
    - if: $ON_MR
      when: manual
      allow_failure: true
      variables:
        mark: "smoke"
    - if: $CI_DESCRIPTION =~ /Nightly/
      variables:
        mark: "smoke or intensive"
  artifacts:
    paths:
      - $CI_JOB_NAME/*
    when: always
    reports:
      junit: e2e_tests/out.xml
  script:
    - |
      cd e2e_tests
      retina-launcher --retina-request $PWD/${REQUEST}.yml --self-contained-html --html=./log/report.html --junitxml=out.xml -m "${mark}" .
  after_script:
    - mv e2e_tests/log ${CI_PROJECT_DIR}/$CI_JOB_NAME

################################################################################
## e2e build
################################################################################
e2e-build:
  extends: .build_and_unit
  stage: test-e2e
  tags:
    - ${SRS_INFRASTRUCTURE_TAG}-${PLATFORM}
  parallel:
    matrix:
      - AUTO_DETECT_ISA: "False"
        ENABLE_TSAN: "False"
      - AUTO_DETECT_ISA: "False"
        ENABLE_TSAN: "True"
  variables:
    OS: ubuntu-22.04
    TEST_MODE: none
    PLATFORM: "amd64"
  needs: []
  rules:
    - if: $ON_MR
      when: manual
      allow_failure: true
    - if: $CI_DESCRIPTION =~ /Nightly/
  script:
    - build_srsgnb
  after_script:
    - echo "Empty after script"
  artifacts:
    name: "srsgnb_bin"
    paths:
      - build/apps/gnb/gnb
  cache: []

################################################################################
## e2e tests
################################################################################
zmq:
  extends: .e2e-run
  variables:
    REQUEST: "request_srsgnb_zmq"
  needs:
  - job: "e2e-build: [False, False]"
    artifacts: true

zmq-tsan:
  extends: .e2e-run
  variables:
    REQUEST: "request_srsgnb_zmq"
  needs:
  - job: "e2e-build: [False, True]"
    artifacts: true