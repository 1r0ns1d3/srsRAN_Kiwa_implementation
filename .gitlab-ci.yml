include:
  - project: softwareradiosystems/testing-tools
    ref: "3"
    file: .gitlab/ci-shared/workflow.yml
  - project: softwareradiosystems/testing-tools
    ref: "3"
    file: .gitlab/ci-shared/scheduler.yml
  - project: softwareradiosystems/testing-tools
    ref: "3"
    file: .gitlab/versions.yml
  - local: .gitlab/ci/build.yml

stages:
  - ci check
  - static
  - build
  - tests
  - scheduler
  - build and publish doc
  - notify status

################################################################################
## CI check
################################################################################
check-ci-versions:
  stage: ci check
  image: $SRS_TOOLS_IMAGE
  rules:
    - if: $ON_MR
  before_script:
    - !reference [.srs_tools_setup_job, before_script]
    - srs_tools_setup
  script:
    - ci-version-check --check-main .gitlab-ci.yml --check-directory .gitlab
  dependencies: []

################################################################################
## Static
################################################################################
.static:
  image: registry.gitlab.com/softwareradiosystems/testing-tools/static_validator:$DOCKER_STATIC_VERSION
  stage: static
  rules:
    - if: $ON_MR
  variables:
    GIT_DEPTH: 0

code-format:
  extends: .static
  script:
    - run-clang-format-diff.sh $CI_MERGE_REQUEST_DIFF_BASE_SHA
    - hex2lowercase.sh
    - is-pristine-repo.sh
  artifacts:
    paths:
      - clang-format.patch
    when: on_failure

no-binaries-added:
  extends: .static
  script:
    - check-for-added-binaries.sh $CI_MERGE_REQUEST_DIFF_BASE_SHA
  allow_failure: true

################################################################################
## Build + Unit Tests + Integration tests
################################################################################
alternative builds:
  stage: build
  rules:
    - if: $ON_MR
      variables:
        run_tests: "false"
        enable_coverage: "false"
    - if: $ON_SCHEDULE
      variables:
        run_tests: "true"
        enable_coverage: "false"
  needs: []
  trigger:
    include: .gitlab/ci/build.yml
    strategy: depend
  parallel:
    matrix:
      - os_type: ubuntu
        os_version: "22.04"
        compiler: clang
      - os_type: ubuntu
        os_version: "20.04"
        compiler: [gcc, clang]
      - os_type: archlinux
        os_version: latest
        compiler: [gcc, clang]

################################################################################
## Scheduler
################################################################################
.gnb-scheduler:
  stage: scheduler
  dependencies: []

scheduler-planer:
  extends:
    - .scheduler-planer
    - .gnb-scheduler
  rules:
    - if: $ON_MR
      changes:
        - .gitlab/ci/schedules.yml

scheduler:
  extends:
    - .scheduler
    - .gnb-scheduler
  rules:
    - if: $ON_DEFAULT_BRANCH

################################################################################
# Doc generation
################################################################################
tests-report:
  stage: build and publish doc
  rules:
    - if: $ON_SCHEDULE
  image: $SRS_TOOLS_IMAGE
  before_script:
    - !reference [.srs_tools_setup_job, before_script]
    - srs_tools_setup
  script:
    - test-reporter --input unittests --output ./test_report.html
  dependencies: []
  artifacts:
    paths:
      - test_report.html

pages:
  stage: build and publish doc
  rules:
    - if: $ON_SCHEDULE
  image: registry.gitlab.com/softwareradiosystems/testing-tools/doxygen:$DOCKER_DOXYGEN_VERSION
  script:
    - doxygen_generator.sh
    - mv build/public .
    - mv coverage.html public/
    - mv test_report.html public/
    - mv public/index.html public/index_doxygen.html
    - mv docs/index.html public/index.html
    - mv docs/*.png public/
    - sed -i 's/commit_hash/'$(git rev-parse HEAD)'/' public/index.html
  needs:
    - job: unit tests
      artifacts: true
    - job: tests-report
      artifacts: true
  artifacts:
    paths:
      - public

################################################################################
# Slack notification
################################################################################
.notifier:
  stage: notify status
  image: $SRS_TOOLS_IMAGE
  before_script:
    - !reference [.srs_tools_setup_job, before_script]
    - srs_tools_setup
    - MSG="Pipeline <${CI_PIPELINE_URL}|#${CI_PIPELINE_IID}> for commit <${CI_PROJECT_URL}/-/commit/${CI_COMMIT_SHA}|${CI_COMMIT_SHORT_SHA}> ${CI_COMMIT_BRANCH}${CI_COMMIT_TAG}."
  dependencies: []

success ci:
  extends: .notifier
  rules:
    - if: $ON_SCHEDULE
  script:
    - notifier --title "$CI_PROJECT_NAME CI success" --msg "${MSG}" --level ok --channel "#ci_gnb" --token "${SLACK_TOKEN}"

failed ci:
  extends: .notifier
  rules:
    - if: $ON_SCHEDULE
      when: on_failure
    - if: $ON_DEFAULT_BRANCH
      when: on_failure
  script:
    - notifier --title "$CI_PROJECT_NAME CI failed" --msg "${MSG}" --level fail --channel "#ci_gnb" --token "${SLACK_TOKEN}"