
/*
 * This code was generated by Spiral 8.4.0-release, www.spiral.net
 */

#include "../omega64.h"
#include <stdint.h>
static float D1[32];
static float D2[64];
static float D3[3072];
static float D4[64];

extern "C" {
void init_fftx_idftbat_1_1536_1d_CPU()
{
  for (int i7 = 0; i7 <= 7; i7++) {
    for (int i18 = 0; i18 <= 1; i18++) {
      D1[((4 * i7) + (2 * i18))]     = cospi((((float)(2 * (i7 * i18))) / 48));
      D1[(1 + (4 * i7) + (2 * i18))] = sinpi((((float)(2 * (i7 * i18))) / 48));
    }
  }
  for (int i7 = 0; i7 <= 7; i7++) {
    for (int i18 = 0; i18 <= 1; i18++) {
      D2[((8 * i7) + (4 * i18))]     = cospi((((float)(2 * (i7 * (2 + i18)))) / 48));
      D2[(1 + (8 * i7) + (4 * i18))] = sinpi((((float)(2 * (i7 * (2 + i18)))) / 48));
      D2[(2 + (8 * i7) + (4 * i18))] = cospi((((float)(2 * (i7 * (4 + i18)))) / 48));
      D2[(3 + (8 * i7) + (4 * i18))] = sinpi((((float)(2 * (i7 * (4 + i18)))) / 48));
    }
  }
  for (int i3 = 0; i3 <= 47; i3++) {
    for (int i10 = 0; i10 <= 3; i10++) {
      for (int i22 = 0; i22 <= 1; i22++) {
        for (int i37 = 0; i37 <= 1; i37++) {
          D3[((64 * i3) + (16 * i10) + (8 * i22) + (4 * i37))] =
              cospi((((float)(2 * (i3 * ((8 * i37) + (4 * i22) + i10)))) / 1536));
          D3[(1 + (64 * i3) + (16 * i10) + (8 * i22) + (4 * i37))] =
              sinpi((((float)(2 * (i3 * ((8 * i37) + (4 * i22) + i10)))) / 1536));
          D3[(2 + (64 * i3) + (16 * i10) + (8 * i22) + (4 * i37))] =
              cospi((((float)(2 * (i3 * (16 + (8 * i37) + (4 * i22) + i10)))) / 1536));
          D3[(3 + (64 * i3) + (16 * i10) + (8 * i22) + (4 * i37))] =
              sinpi((((float)(2 * (i3 * (16 + (8 * i37) + (4 * i22) + i10)))) / 1536));
        }
      }
    }
  }
  for (int i11 = 0; i11 <= 7; i11++) {
    for (int i26 = 0; i26 <= 1; i26++) {
      D4[((8 * i11) + (4 * i26))]     = cospi((((float)(2 * (i11 * i26))) / 32));
      D4[(1 + (8 * i11) + (4 * i26))] = sinpi((((float)(2 * (i11 * i26))) / 32));
      D4[(2 + (8 * i11) + (4 * i26))] = cospi((((float)(2 * (i11 * (2 + i26)))) / 32));
      D4[(3 + (8 * i11) + (4 * i26))] = sinpi((((float)(2 * (i11 * (2 + i26)))) / 32));
    }
  }
}
}

extern "C" {
void fftx_idftbat_1_1536_1d_CPU(float* Y, float* X)
{
  static float T1[3072];
  for (int i3 = 0; i3 <= 47; i3++) {
    static float T2[64];
    for (int i11 = 0; i11 <= 7; i11++) {
      float t137, t138, t139, t140, t141, t142, t143, t144, t145, t146, t147, t148, t149, t150, t151, t152;
      int   a154, a155, a156, a157, a158, a159, a160, a161, a162, a163, a164, a165, a166, a167, a168, a169, a170, a171,
          b10;
      a154           = (96 * i11);
      a155           = (2 * i3);
      a156           = (a154 + a155);
      b10            = (a155 + a154);
      a157           = (b10 + 1);
      a158           = (b10 + 1536);
      a159           = (b10 + 1537);
      t137           = (*((X + a156)) + *((X + a158)));
      t138           = (*((X + a157)) + *((X + a159)));
      t139           = (*((X + a156)) - *((X + a158)));
      t140           = (*((X + a157)) - *((X + a159)));
      a160           = (b10 + 768);
      a161           = (b10 + 769);
      a162           = (b10 + 2304);
      a163           = (b10 + 2305);
      t141           = (*((X + a160)) + *((X + a162)));
      t142           = (*((X + a161)) + *((X + a163)));
      t143           = (*((X + a160)) - *((X + a162)));
      t144           = (*((X + a161)) - *((X + a163)));
      t145           = (t137 + t141);
      t146           = (t138 + t142);
      t147           = (t137 - t141);
      t148           = (t138 - t142);
      a164           = (8 * i11);
      a165           = (a164 + 1);
      a166           = (a164 + 2);
      a167           = (a164 + 3);
      *((T2 + a164)) = ((*((D4 + a164)) * t145) - (*((D4 + a165)) * t146));
      *((T2 + a165)) = ((*((D4 + a165)) * t145) + (*((D4 + a164)) * t146));
      a168           = (a164 + 4);
      *((T2 + a168)) = ((*((D4 + a166)) * t147) - (*((D4 + a167)) * t148));
      a169           = (a164 + 5);
      *((T2 + a169)) = ((*((D4 + a167)) * t147) + (*((D4 + a166)) * t148));
      t149           = (t139 - t144);
      t150           = (t140 + t143);
      t151           = (t139 + t144);
      t152           = (t140 - t143);
      a170           = (a164 + 6);
      a171           = (a164 + 7);
      *((T2 + a166)) = ((*((D4 + a168)) * t149) - (*((D4 + a169)) * t150));
      *((T2 + a167)) = ((*((D4 + a169)) * t149) + (*((D4 + a168)) * t150));
      *((T2 + a170)) = ((*((D4 + a170)) * t151) - (*((D4 + a171)) * t152));
      *((T2 + a171)) = ((*((D4 + a171)) * t151) + (*((D4 + a170)) * t152));
    }
    for (int i10 = 0; i10 <= 3; i10++) {
      float a552, a553, a562, a563, s85, s86, s87, s88, t293, t294, t295, t296, t297, t298, t299, t300, t301, t302,
          t303, t304, t305, t306, t307, t308, t309, t310, t311, t312, t313, t314, t315, t316, t317, t318, t319, t320,
          t321, t322, t323, t324, t325, t326, t327, t328, t329, t330, t331, t332, t333, t334, t335, t336;
      int a544, a545, a546, a547, a548, a549, a550, a551, a554, a555, a556, a557, a558, a559, a560, a561, a564, a565,
          a566, a567, a568, a569, a570, a571, a572, a573, a574, a575, a576, a577, a578, a579, a580, a581, b60, b61;
      a544                  = (2 * i10);
      a545                  = (a544 + 1);
      a546                  = (a544 + 32);
      a547                  = (a544 + 33);
      t293                  = (*((T2 + a544)) + *((T2 + a546)));
      t294                  = (*((T2 + a545)) + *((T2 + a547)));
      t295                  = (*((T2 + a544)) - *((T2 + a546)));
      t296                  = (*((T2 + a545)) - *((T2 + a547)));
      a548                  = (a544 + 8);
      a549                  = (a544 + 9);
      a550                  = (a544 + 40);
      a551                  = (a544 + 41);
      t297                  = (*((T2 + a548)) + *((T2 + a550)));
      t298                  = (*((T2 + a549)) + *((T2 + a551)));
      a552                  = (0.70710678118654757 * (*((T2 + a548)) - *((T2 + a550))));
      a553                  = (0.70710678118654757 * (*((T2 + a549)) - *((T2 + a551))));
      s85                   = (a552 - a553);
      s86                   = (a552 + a553);
      a554                  = (a544 + 16);
      a555                  = (a544 + 17);
      a556                  = (a544 + 48);
      a557                  = (a544 + 49);
      t299                  = (*((T2 + a554)) + *((T2 + a556)));
      t300                  = (*((T2 + a555)) + *((T2 + a557)));
      t301                  = (*((T2 + a554)) - *((T2 + a556)));
      t302                  = (*((T2 + a555)) - *((T2 + a557)));
      a558                  = (a544 + 24);
      a559                  = (a544 + 25);
      a560                  = (a544 + 56);
      a561                  = (a544 + 57);
      t303                  = (*((T2 + a558)) + *((T2 + a560)));
      t304                  = (*((T2 + a559)) + *((T2 + a561)));
      a562                  = (0.70710678118654757 * (*((T2 + a558)) - *((T2 + a560))));
      a563                  = (0.70710678118654757 * (*((T2 + a559)) - *((T2 + a561))));
      s87                   = (a562 + a563);
      s88                   = (a562 - a563);
      t305                  = (t293 + t299);
      t306                  = (t294 + t300);
      t307                  = (t293 - t299);
      t308                  = (t294 - t300);
      t309                  = (t297 + t303);
      t310                  = (t298 + t304);
      t311                  = (t297 - t303);
      t312                  = (t298 - t304);
      t313                  = (t305 + t309);
      t314                  = (t306 + t310);
      t315                  = (t305 - t309);
      t316                  = (t306 - t310);
      a564                  = (16 * i10);
      a565                  = (64 * i3);
      a566                  = (a564 + a565);
      b60                   = (a565 + a564);
      a567                  = (b60 + 1);
      a568                  = (b60 + 2);
      a569                  = (b60 + 3);
      *((T1 + a544 + a565)) = ((*((D3 + a566)) * t313) - (*((D3 + a567)) * t314));
      b61                   = (a565 + a544);
      *((1 + T1 + b61))     = ((*((D3 + a567)) * t313) + (*((D3 + a566)) * t314));
      *((32 + T1 + b61))    = ((*((D3 + a568)) * t315) - (*((D3 + a569)) * t316));
      *((33 + T1 + b61))    = ((*((D3 + a569)) * t315) + (*((D3 + a568)) * t316));
      t317                  = (t307 - t312);
      t318                  = (t308 + t311);
      t319                  = (t307 + t312);
      t320                  = (t308 - t311);
      a570                  = (b60 + 4);
      a571                  = (b60 + 5);
      a572                  = (b60 + 6);
      a573                  = (b60 + 7);
      *((16 + T1 + b61))    = ((*((D3 + a570)) * t317) - (*((D3 + a571)) * t318));
      *((17 + T1 + b61))    = ((*((D3 + a571)) * t317) + (*((D3 + a570)) * t318));
      *((48 + T1 + b61))    = ((*((D3 + a572)) * t319) - (*((D3 + a573)) * t320));
      *((49 + T1 + b61))    = ((*((D3 + a573)) * t319) + (*((D3 + a572)) * t320));
      t321                  = (t295 - t302);
      t322                  = (t296 + t301);
      t323                  = (t295 + t302);
      t324                  = (t296 - t301);
      t325                  = (s85 - s87);
      t326                  = (s86 + s88);
      t327                  = (s85 + s87);
      t328                  = (s86 - s88);
      t329                  = (t321 + t325);
      t330                  = (t322 + t326);
      t331                  = (t321 - t325);
      t332                  = (t322 - t326);
      a574                  = (b60 + 8);
      a575                  = (b60 + 9);
      a576                  = (b60 + 10);
      a577                  = (b60 + 11);
      *((8 + T1 + b61))     = ((*((D3 + a574)) * t329) - (*((D3 + a575)) * t330));
      *((9 + T1 + b61))     = ((*((D3 + a575)) * t329) + (*((D3 + a574)) * t330));
      *((40 + T1 + b61))    = ((*((D3 + a576)) * t331) - (*((D3 + a577)) * t332));
      *((41 + T1 + b61))    = ((*((D3 + a577)) * t331) + (*((D3 + a576)) * t332));
      t333                  = (t323 - t328);
      t334                  = (t324 + t327);
      t335                  = (t323 + t328);
      t336                  = (t324 - t327);
      a578                  = (b60 + 12);
      a579                  = (b60 + 13);
      a580                  = (b60 + 14);
      a581                  = (b60 + 15);
      *((24 + T1 + b61))    = ((*((D3 + a578)) * t333) - (*((D3 + a579)) * t334));
      *((25 + T1 + b61))    = ((*((D3 + a579)) * t333) + (*((D3 + a578)) * t334));
      *((56 + T1 + b61))    = ((*((D3 + a580)) * t335) - (*((D3 + a581)) * t336));
      *((57 + T1 + b61))    = ((*((D3 + a581)) * t335) + (*((D3 + a580)) * t336));
    }
  }
  for (int i2 = 0; i2 <= 31; i2++) {
    static float T21[96];
    for (int i7 = 0; i7 <= 7; i7++) {
      float s173, s174, s175, s176, s177, s178, s179, s180, s181, s182, s183, s184, s185, s186, s187, s188, t418, t419,
          t420, t421, t422, t423, t424, t425, t426, t427, t428, t429, t430, t431, t432, t433, t434, t435, t436, t437,
          t438, t439, t440, t441;
      int a844, a845, a846, a847, a848, a849, a850, a851, a852, a853, a854, a855, a856, a857, a858, a859, a860, a861,
          a862, a863, a864, a865, a866, a867, a868;
      a844                 = ((2 * i2) + (64 * i7));
      a845                 = (a844 + 1);
      a846                 = (a844 + 1536);
      a847                 = (a844 + 1537);
      t418                 = (*((T1 + a844)) + *((T1 + a846)));
      t419                 = (*((T1 + a845)) + *((T1 + a847)));
      t420                 = (*((T1 + a844)) - *((T1 + a846)));
      t421                 = (*((T1 + a845)) - *((T1 + a847)));
      a848                 = (a844 + 512);
      a849                 = (a844 + 513);
      a850                 = (a844 + 2048);
      a851                 = (a844 + 2049);
      t422                 = (*((T1 + a848)) + *((T1 + a850)));
      t423                 = (*((T1 + a849)) + *((T1 + a851)));
      t424                 = (*((T1 + a848)) - *((T1 + a850)));
      t425                 = (*((T1 + a849)) - *((T1 + a851)));
      s173                 = ((0.5 * t424) - (0.8660254037844386 * t425));
      s174                 = ((0.8660254037844386 * t424) + (0.5 * t425));
      a852                 = (a844 + 1024);
      a853                 = (a844 + 1025);
      a854                 = (a844 + 2560);
      a855                 = (a844 + 2561);
      t426                 = (*((T1 + a852)) + *((T1 + a854)));
      t427                 = (*((T1 + a853)) + *((T1 + a855)));
      t428                 = (*((T1 + a852)) - *((T1 + a854)));
      t429                 = (*((T1 + a853)) - *((T1 + a855)));
      s175                 = ((0.5 * t428) + (0.8660254037844386 * t429));
      s176                 = ((0.8660254037844386 * t428) - (0.5 * t429));
      t430                 = (t422 + t426);
      t431                 = (t423 + t427);
      s177                 = (t418 + t430);
      s178                 = (t419 + t431);
      s179                 = (t418 - (0.5 * t430));
      s180                 = (t419 - (0.5 * t431));
      s181                 = (0.8660254037844386 * (t423 - t427));
      s182                 = (0.8660254037844386 * (t422 - t426));
      a856                 = (4 * i7);
      a857                 = (a856 + 1);
      a858                 = (12 * i7);
      *((T21 + a858))      = ((*((D1 + a856)) * s177) - (*((D1 + a857)) * s178));
      *((1 + T21 + a858))  = ((*((D1 + a857)) * s177) + (*((D1 + a856)) * s178));
      t432                 = (s179 - s181);
      t433                 = (s180 + s182);
      t434                 = (s179 + s181);
      t435                 = (s180 - s182);
      a859                 = (8 * i7);
      a860                 = (a859 + 1);
      a861                 = (a859 + 2);
      a862                 = (a859 + 3);
      *((4 + T21 + a858))  = ((*((D2 + a859)) * t432) - (*((D2 + a860)) * t433));
      *((5 + T21 + a858))  = ((*((D2 + a860)) * t432) + (*((D2 + a859)) * t433));
      *((8 + T21 + a858))  = ((*((D2 + a861)) * t434) - (*((D2 + a862)) * t435));
      *((9 + T21 + a858))  = ((*((D2 + a862)) * t434) + (*((D2 + a861)) * t435));
      t436                 = (s173 - s175);
      t437                 = (s174 + s176);
      s183                 = (t420 + t436);
      s184                 = (t421 + t437);
      s185                 = (t420 - (0.5 * t436));
      s186                 = (t421 - (0.5 * t437));
      s187                 = (0.8660254037844386 * (s174 - s176));
      s188                 = (0.8660254037844386 * (s173 + s175));
      a863                 = (a856 + 2);
      a864                 = (a856 + 3);
      *((2 + T21 + a858))  = ((*((D1 + a863)) * s183) - (*((D1 + a864)) * s184));
      *((3 + T21 + a858))  = ((*((D1 + a864)) * s183) + (*((D1 + a863)) * s184));
      t438                 = (s185 - s187);
      t439                 = (s186 + s188);
      t440                 = (s185 + s187);
      t441                 = (s186 - s188);
      a865                 = (a859 + 4);
      a866                 = (a859 + 5);
      a867                 = (a859 + 6);
      a868                 = (a859 + 7);
      *((6 + T21 + a858))  = ((*((D2 + a865)) * t438) - (*((D2 + a866)) * t439));
      *((7 + T21 + a858))  = ((*((D2 + a866)) * t438) + (*((D2 + a865)) * t439));
      *((10 + T21 + a858)) = ((*((D2 + a867)) * t440) - (*((D2 + a868)) * t441));
      *((11 + T21 + a858)) = ((*((D2 + a868)) * t440) + (*((D2 + a867)) * t441));
    }
    for (int i6 = 0; i6 <= 5; i6++) {
      float a1023, a1024, a1033, a1034, s217, s218, s219, s220, t566, t567, t568, t569, t570, t571, t572, t573, t574,
          t575, t576, t577, t578, t579, t580, t581, t582, t583, t584, t585, t586, t587, t588, t589, t590, t591, t592,
          t593;
      int a1015, a1016, a1017, a1018, a1019, a1020, a1021, a1022, a1025, a1026, a1027, a1028, a1029, a1030, a1031,
          a1032, a1035;
      a1015                 = (2 * i6);
      a1016                 = (a1015 + 1);
      a1017                 = (a1015 + 48);
      a1018                 = (a1015 + 49);
      t566                  = (*((T21 + a1015)) + *((T21 + a1017)));
      t567                  = (*((T21 + a1016)) + *((T21 + a1018)));
      t568                  = (*((T21 + a1015)) - *((T21 + a1017)));
      t569                  = (*((T21 + a1016)) - *((T21 + a1018)));
      a1019                 = (a1015 + 12);
      a1020                 = (a1015 + 13);
      a1021                 = (a1015 + 60);
      a1022                 = (a1015 + 61);
      t570                  = (*((T21 + a1019)) + *((T21 + a1021)));
      t571                  = (*((T21 + a1020)) + *((T21 + a1022)));
      a1023                 = (0.70710678118654757 * (*((T21 + a1019)) - *((T21 + a1021))));
      a1024                 = (0.70710678118654757 * (*((T21 + a1020)) - *((T21 + a1022))));
      s217                  = (a1023 - a1024);
      s218                  = (a1023 + a1024);
      a1025                 = (a1015 + 24);
      a1026                 = (a1015 + 25);
      a1027                 = (a1015 + 72);
      a1028                 = (a1015 + 73);
      t572                  = (*((T21 + a1025)) + *((T21 + a1027)));
      t573                  = (*((T21 + a1026)) + *((T21 + a1028)));
      t574                  = (*((T21 + a1025)) - *((T21 + a1027)));
      t575                  = (*((T21 + a1026)) - *((T21 + a1028)));
      a1029                 = (a1015 + 36);
      a1030                 = (a1015 + 37);
      a1031                 = (a1015 + 84);
      a1032                 = (a1015 + 85);
      t576                  = (*((T21 + a1029)) + *((T21 + a1031)));
      t577                  = (*((T21 + a1030)) + *((T21 + a1032)));
      a1033                 = (0.70710678118654757 * (*((T21 + a1029)) - *((T21 + a1031))));
      a1034                 = (0.70710678118654757 * (*((T21 + a1030)) - *((T21 + a1032))));
      s219                  = (a1033 + a1034);
      s220                  = (a1033 - a1034);
      t578                  = (t566 + t572);
      t579                  = (t567 + t573);
      t580                  = (t566 - t572);
      t581                  = (t567 - t573);
      t582                  = (t570 + t576);
      t583                  = (t571 + t577);
      t584                  = (t570 - t576);
      t585                  = (t571 - t577);
      a1035                 = ((2 * i2) + (64 * i6));
      *((Y + a1035))        = (t578 + t582);
      *((1 + Y + a1035))    = (t579 + t583);
      *((1536 + Y + a1035)) = (t578 - t582);
      *((1537 + Y + a1035)) = (t579 - t583);
      *((768 + Y + a1035))  = (t580 - t585);
      *((769 + Y + a1035))  = (t581 + t584);
      *((2304 + Y + a1035)) = (t580 + t585);
      *((2305 + Y + a1035)) = (t581 - t584);
      t586                  = (t568 - t575);
      t587                  = (t569 + t574);
      t588                  = (t568 + t575);
      t589                  = (t569 - t574);
      t590                  = (s217 - s219);
      t591                  = (s218 + s220);
      t592                  = (s217 + s219);
      t593                  = (s218 - s220);
      *((384 + Y + a1035))  = (t586 + t590);
      *((385 + Y + a1035))  = (t587 + t591);
      *((1920 + Y + a1035)) = (t586 - t590);
      *((1921 + Y + a1035)) = (t587 - t591);
      *((1152 + Y + a1035)) = (t588 - t593);
      *((1153 + Y + a1035)) = (t589 + t592);
      *((2688 + Y + a1035)) = (t588 + t593);
      *((2689 + Y + a1035)) = (t589 - t592);
    }
  }
}
}

extern "C" {
void destroy_fftx_idftbat_1_1536_1d_CPU()
{
  /* skip */
}
}
